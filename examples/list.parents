(define cons
  (lambda cons (x list)
    (lambda (i)
      (if (= i 0)
          x
          list))))

(define first
  (lambda first (list)
    (list 0)))

(define rest
  (lambda rest (list)
    (list 1)))

(define printlist
  (lambda printlist (list)
    (if (= (rest list) nil)
        (display (first list))
        (seq
          (display (first list))
          (printlist (rest list))))))

(define xs (cons 1 (cons 2 (cons 3 nil))))
(define ys (cons 5 (rest xs)))

(printlist xs)
(printlist ys)
